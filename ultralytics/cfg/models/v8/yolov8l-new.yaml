# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P2-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 45  # number of classes
scales:
  # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  #n: [0.33, 0.25, 1024]
  #s: [0.33, 0.50, 1024]
  #m: [0.67, 0.75, 768]
  #l: [1.00, 1.00, 512]
  #x: [1.00, 1.25, 512]
  l: [1, 1, 512]

# YOLOv8.0 backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2         320*320
  - [-1, 1, Conv, [192, 3, 2]]  # 1-P2/4        160*160
  - [-1, 3, C2ffaster, [192, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8        80*80
  - [-1, 6, C2ffaster, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16       40*40
  - [-1, 6, C2ffaster, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32      20*20
  - [-1, 3, C2ffaster, [1024, True]] # 8
# YOLOv8.0 head
head:
  - [[2, 4, 6, 8], 1, SimFusion_4in, []]
  - [-1, 1, IFM, [[64, 32]]] #10

  - [[2, 4, 6], 1, SimFusion_3in_1, [192]]
  - [[-1, 10], 1, InjectionMultiSum_Auto_pool, [192, [64, 32], 0]]
  - [-1, 3, C2ffaster, [192, False]] #13

  - [[4, 6, 8], 1, SimFusion_3in_2, [512]]
  - [[-1, 10], 1, InjectionMultiSum_Auto_pool, [512, [64, 32], 1]]
  - [-1, 3, C2ffaster, [512, False]] #16 (P4 -medium)

  - [[8, -1], 1, AdvPoolFusion, []]  # cat backbone P4
  - [-1, 3, C2ffaster, [512, False]]  # 18 

  - [[-1, 13], 1, AdvPoolFusion, []]  # cat backbone P2
  - [-1, 3, C2ffaster, [192, False]]  # 20 (P2 -xsmall)

  - [[20, 18, 8], 1, Detect, [nc]]  # Detect(P2, P4, P5)
